<div class="box">
  <figure class="avatar is-128x128">
    <%= image_tag(application_logo_path) %>
  </figure>
  <form>
    <div class="field">
      <div class="control">
        <% saved_accounts.each_with_index do |account, i| %>
          <%= link_to("/login/?uno=#{i}", class: 'picker-button') do %>
            <div class="picker-item-container">
              <div class="picker-card">
                <div class="picker-avatar">
                  <%= avatar_tag(user: account, size: 40, picker: true) %>
                </div>
                <div class="picker-content">
                  <div class="picker-name">
                    <%= account.name %>
                  </div>
                  <div class="picker-email">
                    <%= account.email %>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        <% end %>
      </div>
    </div>
    <div class="field is-hidden">
      <label class="checkbox">
        <input type="checkbox">
        Remember me
      </label>
    </div>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const loginBtn = document.getElementById('login');
    const passwordField = document.getElementById('password');
    const notFound = document.getElementById('not-found');
    const plzWait = document.getElementById('plz-wait');

    ready();

    loginBtn.addEventListener('click', () => {
      const formData = new FormData();
      formData.append('sessions[password]', passwordField.value);
      formData.append('app_id', '<%= params[:app_id] %>');
      hideNotFound();
      disableBtn();

      let url = `<%= login_path(next: params[:next]) %>`;
      fetch(url, {method: 'post', body: formData, headers: {'X-CSRF-Token': csrfToken()}})
        .then(res => {
          res.json().then(result => {
            if (result.success && result.redirect_to) {
              window.location.replace(result.redirect_to);
            } else {
              showNotFound();
            }
          });
        });
    });

    function ready() {
      plzWait.classList.add('is-hidden');
      enableBtn();
    }

    function disableBtn() {
      loginBtn.setAttribute('disabled', 'disabled');
    }

    function enableBtn() {
      loginBtn.removeAttribute('disabled');
    }

    function setLoading() {
      disableBtn();
    }

    function showNotFound() {
      notFound.classList.remove('is-hidden');
      enableBtn();
    }

    function hideNotFound() {
      notFound.classList.add('is-hidden');
      enableBtn();
    }
  });
</script>
