<p class="subtitle">Now, please enter your password to login.</p>
<div class="box">
  <%= avatar_tag(user: account, size: 128) %>
  <form>
    <div class="field">
      <div class="control">
        <p class="title is-size-5 has-text-centered"><%= account.name %></p>
        <div class="level login">
          <div class="level-left">
            <% unless account.active? %>
              <i class="fas fa-exclamation-triangle" style="margin-right: 5px;"></i>
            <% end %>
            <span><%= account.email %></span>
          </div>
          <div class="level-right">
            <%= link_to('Change', change_email_path(app_id: current_application&.uuid), method: :post) %>
          </div>
        </div>
        <input id="password" class="input is-large no-outline" type="password" placeholder="Your Password" autofocus>
        <span id="not-found" class="help has-text-danger is-hidden">Your password is invalid. Please try again.</span>
        <span id="plz-wait" class="help has-text-warning">Getting ready just for you...</span>
      </div>
    </div>
    <div class="field is-hidden">
      <label class="checkbox">
        <input type="checkbox">
        Remember me
      </label>
    </div>
    <button id="login" disabled class="button is-block is-info is-large is-fullwidth">Login</button>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const loginBtn = document.getElementById('login');
    const passwordField = document.getElementById('password');
    const notFound = document.getElementById('not-found');
    const plzWait = document.getElementById('plz-wait');

    ready();

    loginBtn.addEventListener('click', () => {
      const formData = new FormData();
      formData.append('sessions[password]', passwordField.value);
      formData.append('app_id', '<%= params[:app_id] %>');
      hideNotFound();
      disableBtn();

      let url = `<%= login_path(next: params[:next]) %>`;
      fetch(url, {method: 'post', body: formData, headers: {'X-CSRF-Token': csrfToken()}})
        .then(res => {
          res.json().then(result => {
            if (result.success && result.redirect_to) {
              window.location.replace(result.redirect_to);
            } else {
              showNotFound();
            }
          });
        });
    });

    function ready() {
      plzWait.classList.add('is-hidden');
      enableBtn();
    }

    function disableBtn() {
      loginBtn.setAttribute('disabled', 'disabled');
    }

    function enableBtn() {
      loginBtn.removeAttribute('disabled');
    }

    function setLoading() {
      disableBtn();
    }

    function showNotFound() {
      notFound.classList.remove('is-hidden');
      enableBtn();
    }

    function hideNotFound() {
      notFound.classList.add('is-hidden');
      enableBtn();
    }
  });
</script>
